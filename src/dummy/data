{
    "_id": {
        "$oid": "679136f2415e70960f17098c"
    },
    "title": "test editorial",
    "author": {
        "$oid": "678feef3d4aef09cc3e6fd54"
    },
    "contestPlatform": "CodeChef",
    "contestName": "START169",
    "languageUsed": "Java",
    "overallDifficulty": "Medium",
    "introduction": "Greetings, fellow problem solvers! ðŸŒŸ\r\nWelcome to this editorial, where we'll dive deep into the intricacies of [Problem Name]. Whether you're here after attempting the problem or just curious about its solution, you've come to the right place. This problem challenges us to [briefly describe the problem theme, e.g., optimize a process, solve a tricky algorithmic question, or understand a data structure]. We'll explore its thought process, key observations, and an efficient implementation to arrive at the solution. So, letâ€™s get started!",
    "problems": [
        {
            "problemName": "Make K Most Frequent",
            "link": "https://codechef.com/problems/P3169",
            "difficulty": "Medium",
            "approach": "<i>Greetings, fellow problem solvers! ðŸŒŸ\r\nWelcome to this editorial, where we'll dive deep into the intricacies of [Problem Name]. Whether you're here after attempting the problem or just curious about its solution, you've come to the right place. This problem challenges us to [briefly describe the problem theme, e.g., optimize a process, solve a tricky algorithmic question, or understand a data structure]. We'll explore its thought process, key observations, and an efficient implementation to arrive at the solution. So, letâ€™s get started!</i>",
            "code": "",
            "_id": {
                "$oid": "679136f3415e70960f17098d"
            }
        },
        {
            "problemName": "Constant Subsequence",
            "link": "https://codechef.com/problems/P5169",
            "difficulty": "Medium",
            "approach": "Greetings, fellow problem solvers! ðŸŒŸ\r\nWelcome to this editorial, where we'll dive deep into the intricacies of [Problem Name]. Whether you're here after attempting the problem or just curious about its solution, you've come to the right place. This problem challenges us to [briefly describe the problem theme, e.g., optimize a process, solve a tricky algorithmic question, or understand a data structure]. We'll explore its thought process, key observations, and an efficient implementation to arrive at the solution. So, letâ€™s get started!",
            "code": "",
            "_id": {
                "$oid": "679136f3415e70960f17098e"
            }
        }
    ],
    "outro": "If you have any alternative solutions, optimizations, or questions, feel free to share them in the comments or discussion section. Letâ€™s keep learning and growing together! ðŸš€\r\nHappy coding, and see you in the next challenge! ðŸ˜Š",
    "tags": [],
    "likes": {
        "$numberInt": "30"
    },
    "comments": [
        {
            "$oid": "6795d64aa4e4b71eb1f4d039"
        },
        {
            "$oid": "6795e1cc37b3299c8ce432e3"
        },
        {
            "$oid": "6795f1475a28dabef03a1d38"
        },
        {
            "$oid": "679600c05a28dabef03a1e2b"
        }
    ],
    "isApproved": false,
    "createdAt": {
        "$date": {
            "$numberLong": "1737570034995"
        }
    },
    "updatedAt": {
        "$date": {
            "$numberLong": "1737901612684"
        }
    },
    "__v": {
        "$numberInt": "8"
    }
}

{
    "_id": {
        "$oid": "679671ee1bd770636253992b"
    },
    "title": "Codechef  Starters 167 AC  ðŸ˜‡",
    "author": {
        "$oid": "678feef3d4aef09cc3e6fd54"
    },
    "contestPlatform": "CodeChef",
    "contestName": "START167",
    "languageUsed": "Java",
    "overallDifficulty": "Easy",
    "introduction": "It was a great contest.\n\n          Really challenging one. ðŸ¥¹ðŸ˜‡",
    "problems": [
        {
            "problemName": "Delete Not Equal",
            "link": "https://codechef.com/problems/DELNQ",
            "difficulty": "Medium",
            "approach": "It was based on binary search.",
            "code": "#include <bits/stdc++.h>\r\n\r\n#include <bitset>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n\r\nusing ll = long long;\r\nusing lld = long double;\r\nusing ull = unsigned long long;\r\n\r\n// Constants\r\nconst ll INF = LONG_LONG_MAX;\r\nconst ll mod = 1e9 + 7;\r\nconst ll new_mod = 998244353;\r\n\r\n// TypeDEf\r\ntypedef pair<ll, ll> pll;\r\ntypedef vector<ll> vll;\r\ntypedef vector<pll> vpll;\r\ntypedef vector<string> vs;\r\ntypedef unordered_map<ll, ll> umll;\r\ntypedef map<ll, ll> mll;\r\n\r\n// Macros\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define pii pair<int, int>\r\n#define fl(i, n) for (int i = 0; i < n; i++)\r\n#define rl(i, m, n) for (int i = n; i >= m; i--)\r\n#define py cout << \"YES\\n\";\r\n#define pm cout << \"-1\\n\";\r\n#define pn cout << \"NO\\n\";\r\n#define pimp cout << \"IMPOSSIBLE\\n\";\r\n#define vr(v) v.begin(), v.end()\r\n#define rv(v) v.end(), v.begin()\r\n#define len(s) (int)s.size()\r\n#define forn(i, n) for (int i = 0; i < int(n); i++)\r\n#define all(v) v.begin(), v.end()\r\n#define one(x) memset(x, -1, sizeof(x))\r\n#define zero(x) memset(x, 0, sizeof(x))\r\n#define printn cout << endl;\r\n#define printarr(v)       \\\r\n    for (auto x : v)      \\\r\n        cout << x << ' '; \\\r\n    cout << endl;\r\n#define setBits(x) __builtin_popcountll(x)\r\n#define getunique(v)                      \\\r\n    {                                     \\\r\n        sort(all(v));                     \\\r\n        v.erase(unique(all(v)), v.end()); \\\r\n    }\r\n\r\ntemplate <class T>\r\nvoid print(const T &t)\r\n{\r\n    cout << t << endl;\r\n}\r\n\r\n#define inputvector(v) \\\r\n    for (auto &x : v)  \\\r\n    {                  \\\r\n        cin >> x;      \\\r\n    }\r\n\r\nconst int N = 1e7 + 1;\r\nvector<bool> isPrime;\r\nvector<ll> sprime;\r\n\r\nll multiply(ll a, ll b, ll m = mod)\r\n{\r\n    return (a % m) * (b % m) % m;\r\n}\r\n\r\nll add(ll a, ll b, ll m = mod)\r\n{\r\n    return (a % m) + (b % m) % m;\r\n}\r\n\r\nll subtract(ll a, ll b, ll m = mod)\r\n{\r\n    return ((a % m) - (b % m) + m) % m;\r\n}\r\n\r\n// Function to calculate (a^b) % mod\r\nlong long power(long long a, long long b, long long mod)\r\n{\r\n    long long result = 1;\r\n    while (b > 0)\r\n    {\r\n        if (b % 2 == 1)\r\n        {\r\n            result = (result * a) % mod;\r\n        }\r\n        a = (a * a) % mod;\r\n        b /= 2;\r\n    }\r\n    return result % mod;\r\n}\r\n\r\nusing ll = long long;\r\n\r\nll mul_inverse(ll a)\r\n{\r\n    ll res = 1;\r\n    ll b = mod - 2;\r\n    ll m = mod;\r\n    while (b > 0)\r\n    {\r\n        if (b & 1)\r\n        {\r\n            res = (res * 1ll * a) % m;\r\n        }\r\n        a = (a * 1ll * a) % m;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\n\r\nvoid generatePrimes()\r\n{\r\n    isPrime.assign(N, true);\r\n    sprime.assign(N, 1);\r\n    for (int i = 2; i * i < N; i++)\r\n    {\r\n        if (isPrime[i])\r\n        {\r\n            for (int j = i * i; j < N; j += i)\r\n            {\r\n                isPrime[j] = false;\r\n                if (sprime[j] == 1)\r\n                {\r\n                    sprime[j] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid getFactorization(ll n, unordered_map<ll, ll> &mp)\r\n{\r\n    while (n > 0)\r\n    {\r\n        if (sprime[n] == 1)\r\n        {\r\n            mp[n]++;\r\n            break;\r\n        }\r\n        mp[sprime[n]]++;\r\n        n /= sprime[n];\r\n    }\r\n    return;\r\n}\r\n\r\n// @uncomment this for factorial questions\r\nconst int factSize = 100000 + 5;\r\nll fact[factSize];\r\nll invFact[factSize];\r\n\r\n// Precompute factorials and modular inverses\r\nvoid precomputeFactorials(int n, long long mod)\r\n{\r\n    fact[0] = 1;\r\n    for (int i = 1; i <= n; ++i)\r\n    {\r\n        fact[i] = (fact[i - 1] * i) % mod;\r\n    }\r\n    invFact[n] = power(fact[n], mod - 2, mod); // Modular inverse using Fermat's theorem\r\n    for (int i = n - 1; i >= 0; --i)\r\n    {\r\n        invFact[i] = (invFact[i + 1] * (i + 1)) % mod;\r\n    }\r\n}\r\n\r\nvector<int> primes;\r\n\r\nvoid generatePrimes(int n)\r\n{\r\n    vector<bool> isPrime(n + 1, true); // Initialize all numbers as prime\r\n    isPrime[0] = isPrime[1] = false;   // 0 and 1 are not prime\r\n\r\n    for (int i = 2; i * i <= n; ++i)\r\n    {\r\n        if (isPrime[i])\r\n        {\r\n            for (int j = i * i; j <= n; j += i)\r\n            {\r\n                isPrime[j] = false; // Mark multiples of i as non-prime\r\n            }\r\n        }\r\n    }\r\n\r\n    // Collect all prime numbers into a vector\r\n\r\n    for (int i = 2; i <= n; ++i)\r\n    {\r\n        if (isPrime[i])\r\n        {\r\n            primes.push_back(i);\r\n        }\r\n    }\r\n}\r\n\r\nvector<int> palindromicNos;\r\n\r\nvoid precomputePalindromes()\r\n{\r\n    for (int i = 0; i <= 32768; i++)\r\n    {\r\n        string curr = to_string(i);\r\n        string rev = curr;\r\n        reverse(all(curr));\r\n        if (curr == rev)\r\n        {\r\n            palindromicNos.push_back(i);\r\n        }\r\n    }\r\n}\r\n\r\nvoid sol1()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    int zeros = 0;\r\n    vector<int> freq(n + 1, 0);\r\n\r\n    fl(i, n)\r\n    {\r\n        int e;\r\n        cin >> e;\r\n        if (e == 0)\r\n            zeros++;\r\n        else\r\n            freq[e]++;\r\n    }\r\n\r\n    int maxfr = *max_element(all(freq));\r\n    int pos = 0;\r\n    ll res = 0;\r\n    bool used = false;\r\n\r\n    fl(i, n + 1)\r\n    {\r\n        if (i == 0)\r\n            continue;\r\n        if (freq[i] == maxfr)\r\n        {\r\n            if (!used)\r\n            {\r\n                freq[i] += zeros;\r\n                res += (freq[i] * (freq[i] - 1)) / 2;\r\n                used = true;\r\n            }\r\n            else\r\n            {\r\n                res += (freq[i] * (freq[i] - 1)) / 2;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            res += (freq[i] * (freq[i] - 1)) / 2;\r\n        }\r\n    }\r\n\r\n    if (!used)\r\n    {\r\n        res += (zeros * (zeros - 1)) / 2;\r\n    }\r\n\r\n    cout << res << endl;\r\n}\r\n\r\n// https://www.codechef.com/problems/MAXEQUAL\r\n\r\nvoid sl2()\r\n{\r\n    int n;\r\n    cin >> n;\r\n\r\n    ll zeros = n;\r\n    vector<ll> freq(n + 1, 0);\r\n\r\n    ll maxfreq = 0;\r\n    ll kiskimaxfreq;\r\n\r\n    ll residue = 0ll;\r\n\r\n    fl(i, n)\r\n    {\r\n        ll x, y;\r\n        cin >> x >> y;\r\n\r\n        ll curr = 0;\r\n\r\n        residue -= (freq[y] * (freq[y] - 1)) / 2;\r\n        freq[y]++;\r\n        residue += (freq[y] * (freq[y] - 1)) / 2;\r\n\r\n        maxfreq = max(maxfreq, freq[y]);\r\n\r\n        if (maxfreq == freq[y])\r\n        {\r\n            kiskimaxfreq = y;\r\n        }\r\n\r\n        zeros--;\r\n\r\n        curr += (((maxfreq + zeros) * (maxfreq + zeros - 1)) / 2) + residue;\r\n        curr -= (freq[kiskimaxfreq] * (freq[kiskimaxfreq] - 1)) / 2;\r\n\r\n        cout << curr << \" \";\r\n    }\r\n\r\n    cout << endl;\r\n}\r\n\r\nvoid sol3()\r\n{\r\n    int n, k;\r\n    cin >> n >> k;\r\n\r\n    string a, b;\r\n    cin >> a >> b;\r\n\r\n    vector<pair<int, char>> ans;\r\n\r\n    for (int i = n - 1; i >= 0; i--)\r\n    {\r\n        if (a[i] == b[i])\r\n            continue;\r\n        else\r\n        {\r\n            int j = i - 1;\r\n\r\n            while (j >= 0 and (b[j] == b[i]))\r\n            {\r\n                j--;\r\n            }\r\n\r\n            j++;\r\n\r\n            int currlen = i - j + 1;\r\n            int remlen = k - currlen;\r\n            if ((i + remlen) >= n)\r\n            {\r\n                cout << -1 << endl;\r\n                return;\r\n            }\r\n\r\n            for (int p = i + 1; p <= (i + remlen); p++)\r\n            {\r\n                if (b[p] != b[i])\r\n                {\r\n                    cout << -1 << endl;\r\n                    return;\r\n                }\r\n            }\r\n\r\n            ans.push_back({j + 1, b[i]});\r\n            i = j;\r\n        }\r\n    }\r\n\r\n    cout << ans.size() << endl;\r\n    for (auto i : ans)\r\n    {\r\n        cout << i.first << \" \" << i.second << endl;\r\n    }\r\n}\r\n\r\nvoid solve()\r\n{\r\n    int n, k;\r\n    cin >> n >> k;\r\n    string f, s;\r\n    cin >> f >> s;\r\n    vector<int> prev(n);\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        prev[i] = i;\r\n        if (i > 0 and s[i] == s[i - 1])\r\n            prev[i] = prev[i - 1];\r\n    }\r\n\r\n    vector<pair<int, char>> changes;\r\n    int j = n;\r\n    int pos_ = n;\r\n    char c_;\r\n\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        j--;\r\n        if (j - k + 1 < 0)\r\n        {\r\n            j++;\r\n            break;\r\n        }\r\n        if (j >= pos_)\r\n            f[j] = c_;\r\n        if (s[j] == f[j])\r\n            continue;\r\n        f[j] = s[j];\r\n        pos_ = j - k + 1, c_ = f[j];\r\n        changes.push_back({pos_, c_});\r\n    }\r\n\r\n    while (--j >= pos_)\r\n        f[j] = c_;\r\n\r\n    bool change[n] = {false};\r\n    char c;\r\n    int pos = -1;\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        char &curr = f[i];\r\n        if (pos >= i)\r\n            curr = c;\r\n        if (curr == s[i])\r\n            continue;\r\n        int p = prev[i];\r\n        p = max(p, i - k + 1);\r\n        if (p + k - 1 >= n)\r\n            continue;\r\n        if (!change[p])\r\n            changes.push_back({p, s[i]});\r\n        change[p] = true;\r\n        pos = p + k - 1, c = s[i];\r\n        f[i] = s[i];\r\n    }\r\n\r\n    if (f != s)\r\n        cout << -1 << endl;\r\n    else\r\n    {\r\n        cout << changes.size() << endl;\r\n        for (auto t : changes)\r\n            cout << t.first + 1 << \" \" << t.second << endl;\r\n    }\r\n}\r\n\r\nvoid sol4()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    vector<int> v(n);\r\n    fl(i, n)\r\n    {\r\n        cin >> v[i];\r\n    }\r\n\r\n    ll res = 0ll;\r\n\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        for (int j = i; j < n; j++)\r\n        {\r\n            int zeros = 0;\r\n            for (int p = i; p <= j; p++)\r\n            {\r\n                if (v[p] == 0)\r\n                    zeros++;\r\n            }\r\n            res += (j - i + 1) + zeros;\r\n        }\r\n    }\r\n\r\n    cout << res << endl;\r\n}\r\n\r\n// https://codeforces.com/contest/1637/problem/C\r\nvoid sol5()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    vector<ll> v(n);\r\n\r\n    ll odds = 0, evens = 0;\r\n    bool numGreaterThan1 = false;\r\n    fl(i, n)\r\n    {\r\n        cin >> v[i];\r\n        if ((i == 0) || (i == n - 1))\r\n        {\r\n            continue;\r\n        }\r\n        if (v[i] > 1)\r\n        {\r\n            numGreaterThan1 = true;\r\n        }\r\n        if (v[i] % 2 == 0)\r\n        {\r\n            evens++;\r\n        }\r\n        else\r\n        {\r\n            odds++;\r\n        }\r\n    }\r\n\r\n    v[0] = 0;\r\n    v[n - 1] = 0;\r\n\r\n    if (odds == 0)\r\n    {\r\n        ll sum = accumulate(all(v), 0ll);\r\n        cout << (ll)(sum / 2) << endl;\r\n    }\r\n    else\r\n    {\r\n        if (evens || (numGreaterThan1 and odds > 1))\r\n        {\r\n            ll cost = 0ll;\r\n\r\n            for (int i = 1; i < n - 1; i++)\r\n            {\r\n                cost += (1ll * v[i] + 1) / 2;\r\n            }\r\n\r\n            cout << cost << endl;\r\n        }\r\n        else\r\n        {\r\n            cout << -1 << endl;\r\n        }\r\n    }\r\n}\r\n\r\nvoid sol6()\r\n{\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<int> a(n), b(n);\r\n    ll constantTerm = 0;\r\n\r\n    fl(i, n)\r\n    {\r\n        cin >> a[i];\r\n        constantTerm += (a[i] * a[i]);\r\n    }\r\n\r\n    fl(i, n)\r\n    {\r\n        cin >> b[i];\r\n        constantTerm += (b[i] * b[i]);\r\n    }\r\n\r\n    constantTerm = (n - 2) * 1ll * (constantTerm);\r\n\r\n    // approach 1 using dp[i,w]\r\n\r\n    // vector<vector<bool>> dp(n, vector<bool>(10001, 0));\r\n\r\n    // dp[0][a[0]] = 1;\r\n    // dp[0][b[0]] = 1;\r\n\r\n    // for (int i = 1; i < n; i++)\r\n    // {\r\n    //     for (int j = 0; j <= 10000; j++)\r\n    //     {\r\n    //         dp[i][j] = ((j - a[i - 1]) >= 0 ? dp[i - 1][j - a[i - 1]] : 0) ||\r\n    //                    ((j - b[i - 1]) >= 0\r\n    //                         ? dp[i - 1][j - b[i - 1]]\r\n    //                         : 0);\r\n    //     }\r\n    // }\r\n\r\n    // ll total = accumulate(all(a), 0ll) + accumulate(all(b), 0ll);\r\n    // ll res = LLONG_MAX;\r\n\r\n    // for (int i = 0; i < 10001; i++)\r\n    // {\r\n    //     if (dp[n - 1][i])\r\n    //     {\r\n    //         res = min(res, (i * i) + (total - i) * (total - i));\r\n    //     }\r\n    // }\r\n\r\n    ll res = LLONG_MAX;\r\n\r\n    // approach-2 using bitset\r\n\r\n    ll suma = 0, sumb = 0;\r\n\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        if (a[i] > b[i])\r\n        {\r\n            swap(a[i], b[i]);\r\n        }\r\n        suma += a[i];\r\n        sumb += b[i];\r\n    }\r\n\r\n    bitset<10004> dp;\r\n    dp[0] = 1;\r\n\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        dp |= (1 << (b[i] - a[i]));\r\n    }\r\n\r\n    for (int i = 0; i <= sumb - suma; i++)\r\n    {\r\n        if (dp[i])\r\n        {\r\n            res = min(res, (suma + i) * (suma + i) + (sumb - i) * (sumb - i));\r\n        }\r\n    }\r\n\r\n    cout << res + constantTerm << endl;\r\n}\r\n\r\n// https://codeforces.com/contest/1637/problem/E\r\n\r\nvoid sol7()\r\n{\r\n    int n, m;\r\n    cin >> n >> m;\r\n\r\n    vector<int> a(n);\r\n    map<int, int> cnt;\r\n\r\n    for (auto &x : a)\r\n    {\r\n        cin >> x;\r\n        cnt[x]++;\r\n    }\r\n\r\n    vector<pair<int, int>> bad_pairs;\r\n    bad_pairs.reserve(2 * m);\r\n\r\n    for (int i = 0; i < m; i++)\r\n    {\r\n        int x, y;\r\n        cin >> x >> y;\r\n        bad_pairs.emplace_back(x, y);\r\n        bad_pairs.emplace_back(y, x);\r\n    }\r\n\r\n    sort(all(bad_pairs));\r\n\r\n    vector<vector<int>> occ(n);\r\n    for (auto &val : cnt)\r\n        occ[val.second].push_back(val.first);\r\n\r\n    for (auto &v : occ)\r\n        reverse(v.begin(), v.end());\r\n\r\n    long long answer = 0;\r\n\r\n    // Iterating over all x\r\n    // and cnty â‰¤ cntx\r\n    //     works in O(âˆ‘cntx) = O(n)\r\n    //                             .And finding maximum y\r\n    //                                 such that xâ‰ y and\r\n    //                         the pair(x, y)\r\n    //                             is not bad.\r\n\r\n    for (int cnt_x = 1; cnt_x < n; cnt_x++)\r\n    {\r\n        for (int x : occ[cnt_x])\r\n        {\r\n            for (int cnt_y = 1; cnt_y <= cnt_x; cnt_y++)\r\n            {\r\n                for (int y : occ[cnt_y])\r\n                {\r\n                    if (x != y and !binary_search(bad_pairs.begin(), bad_pairs.end(), make_pair(x, y)))\r\n                    {\r\n                        answer = max(answer, 1ll * (cnt_x + cnt_y) * (x + y));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << answer << '\\n';\r\n}\r\n\r\nvoid sol8()\r\n{\r\n    int n, q;\r\n    cin >> n >> q;\r\n\r\n    string s;\r\n    cin >> s;\r\n\r\n    ll ans = 0;\r\n\r\n    for (int i = 0; i < n - 1; i++)\r\n    {\r\n        if (s[i] == s[i + 1])\r\n        {\r\n            ans += 2;\r\n        }\r\n        else\r\n        {\r\n            ans++;\r\n        }\r\n    }\r\n\r\n    fl(i, q)\r\n    {\r\n        int ind;\r\n        cin >> ind;\r\n        --ind;\r\n\r\n        if (ind != 0)\r\n        {\r\n            ans = ans - ((s[ind] == s[ind - 1]) ? 2 : 1);\r\n        }\r\n        if (ind != (n - 1))\r\n        {\r\n            ans = ans - ((s[ind] == s[ind + 1]) ? 2 : 1);\r\n        }\r\n\r\n        int newval = s[ind] - '0';\r\n        newval = !newval;\r\n        s[ind] = newval + '0';\r\n\r\n        if (ind != 0)\r\n        {\r\n            ans = ans + ((s[ind] == s[ind - 1]) ? 2 : 1);\r\n        }\r\n        if (ind != (n - 1))\r\n        {\r\n            ans = ans + ((s[ind] == s[ind + 1]) ? 2 : 1);\r\n        }\r\n\r\n        cout << ans << endl;\r\n    }\r\n}\r\n\r\nvoid h1()\r\n{\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<int> v(n);\r\n    fl(i, n)\r\n    {\r\n        cin >> v[i];\r\n    }\r\n\r\n    if (v[0] == v[n - 1])\r\n    {\r\n        py;\r\n        return;\r\n    }\r\n\r\n    for (int i = 0; i < n - 1; i++)\r\n    {\r\n        if (v[i] == v[0] and v[i + 1] == v[n - 1])\r\n        {\r\n            py;\r\n            return;\r\n        }\r\n    }\r\n\r\n    pn;\r\n}\r\n\r\nvoid h2()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    vector<ll> v(n);\r\n    inputvector(v);\r\n\r\n    ll my = v[0];\r\n    vector<ll> sm, lg;\r\n\r\n    for (int i = 1; i < n; i++)\r\n    {\r\n        if (v[i] < my)\r\n        {\r\n            sm.push_back(v[i]);\r\n        }\r\n        else\r\n        {\r\n            lg.push_back(v[i]);\r\n        }\r\n    }\r\n\r\n    ll ans = 1;\r\n    if (sm.size() == 0)\r\n    {\r\n        ans += my - 1;\r\n    }\r\n    else\r\n    {\r\n        ll t = *max_element(all(sm));\r\n        ll gap = abs(t - my);\r\n        ans += gap / 2;\r\n    }\r\n\r\n    if (lg.size() == 0)\r\n    {\r\n        ans += (1e6 - my);\r\n    }\r\n    else\r\n    {\r\n        ll t = *min_element(all(lg));\r\n        ll gap = abs(t - my);\r\n        ans += gap / 2;\r\n    }\r\n\r\n    if (lg.size() == 0 and sm.size() == 0)\r\n    {\r\n        ans--;\r\n    }\r\n\r\n    cout << ans << endl;\r\n}\r\n\r\nvoid h3()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    string s;\r\n    cin >> s;\r\n    int ans = n;\r\n\r\n    // string t = s;\r\n\r\n    bool one = false, z = false;\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        if (s[i] == '1')\r\n            one = true;\r\n        else\r\n            z = true;\r\n    }\r\n\r\n    if (one and z)\r\n    {\r\n        cout << 1 << endl;\r\n    }\r\n    else\r\n    {\r\n        cout << n << endl;\r\n    }\r\n \r\n}\r\n\r\nvoid h4()\r\n{\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<vector<int>> ans(n, vector<int>(n, 0));\r\n\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        ans[i][i] = (n + 1) / 2;\r\n    }\r\n\r\n    vector<vector<int>> rows(n, vector<int>(n + 1, 0)), cols(n, vector<int>(n + 1, 0));\r\n\r\n    fl(i, n)\r\n    {\r\n        rows[i][(n + 1) / 2] = 1;\r\n        cols[i][(n + 1) / 2] = 1;\r\n    }\r\n\r\n    fl(i, n)\r\n    {\r\n        ans[i][n - i - 1] = i + 1;\r\n        rows[i][i + 1] = 1;\r\n        cols[n - i - 1][i + 1] = 1;\r\n    }\r\n\r\n    fl(i, n)\r\n    {\r\n        fl(j, n)\r\n        {\r\n            if (ans[i][j] == 0)\r\n            {\r\n                for (int p = 1; p <= n; p++)\r\n                {\r\n                    if (!rows[i][p] and !cols[j][p])\r\n                    {\r\n                        ans[i][j] = p;\r\n                        rows[i][p] = 1;\r\n                        cols[j][p] = 1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for (auto i : ans)\r\n    {\r\n        for (auto k : i)\r\n        {\r\n            cout << k << \" \";\r\n        }\r\n        cout << endl;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n    std::cout.tie(nullptr);\r\n    ll t;\r\n    cin >> t;\r\n\r\n    while (t--)\r\n        h3();\r\n\r\n    // precomputeFactorials(factSize, mod);\r\n    // primes.clear();\r\n    // generatePrimes(1e5);\r\n    // precomputePalindromes();\r\n\r\n    return 0;\r\n}",
            "_id": {
                "$oid": "679671ee1bd770636253992c"
            }
        },
        {
            "problemName": "Sum Over Subarrays",
            "link": "https://codechef.com/problems/SUMFSUB",
            "difficulty": "Medium",
            "approach": "I used DP based approach in this problem.\n\nOverall T.C. was O(n*m*k)",
            "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// Macros\r\n#define fast_io ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);\r\n#define pb push_back\r\n#define mp make_pair\r\n#define all(v) (v).begin(), (v).end()\r\n#define rall(v) (v).rbegin(), (v).rend()\r\n#define fi first\r\n#define se second\r\n#define sz(x) (int)((x).size())\r\n#define endl '\\n'\r\n\r\n// Typedefs\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef vector<int> vi;\r\ntypedef vector<ll> vll;\r\ntypedef vector<pii> vpii;\r\ntypedef vector<pll> vpll;\r\n\r\n// Constants\r\nconst int MOD = 1e9 + 7;\r\nconst ll INF = 1e18;\r\nconst double EPS = 1e-9;\r\n\r\n// Debugging\r\n#ifndef ONLINE_JUDGE\r\n    #define debug(x) cerr << #x << \" = \" << (x) << endl;\r\n#else\r\n    #define debug(x)\r\n#endif\r\n\r\n// Utility Functions\r\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }\r\nll lcm(ll a, ll b) { return a / gcd(a, b) * b; }\r\nll mod_add(ll a, ll b, ll m = MOD) { return (a + b) % m; }\r\nll mod_sub(ll a, ll b, ll m = MOD) { return (a - b + m) % m; }\r\nll mod_mul(ll a, ll b, ll m = MOD) { return (a * b) % m; }\r\nll mod_pow(ll a, ll b, ll m = MOD) {\r\n    ll res = 1;\r\n    while (b > 0) {\r\n        if (b & 1) res = mod_mul(res, a, m);\r\n        a = mod_mul(a, a, m);\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\n\r\n// Input/Output\r\ntemplate<typename T>\r\nvoid read_vector(vector<T>& v) {\r\n    for (auto& x : v) cin >> x;\r\n}\r\n\r\ntemplate<typename T>\r\nvoid print_vector(const vector<T>& v) {\r\n    for (const auto& x : v) cout << x << \" \";\r\n    cout << endl;\r\n}\r\n \r\n \r\n void solve(){\r\n     \r\n }\r\n\r\n// Main Driver\r\nint main() {\r\n    fast_io;\r\n    int t = 1;\r\n    cin >> t; // Uncomment if there are multiple test cases\r\n    while (t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}",
            "_id": {
                "$oid": "679671ee1bd770636253992d"
            }
        }
    ],
    "outro": "Thank your, let's meet next Wednesday..",
    "tags": [],
    "likes": {
        "$numberInt": "1"
    },
    "comments": [
        {
            "$oid": "6796722b1bd7706362539954"
        }
    ],
    "isApproved": false,
    "createdAt": {
        "$date": {
            "$numberLong": "1737912814395"
        }
    },
    "updatedAt": {
        "$date": {
            "$numberLong": "1737912876148"
        }
    },
    "__v": {
        "$numberInt": "1"
    }
}